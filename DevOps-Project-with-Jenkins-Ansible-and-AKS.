################################################################### Jenkins Installation on Ubuntu #########################################################################
$ sudo apt update
$ sudo apt install default-jdk
$ update-alternatives --config java    //To find out where apt installed Java on Ubuntu
$ sudo nano /etc/environment
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"
JAVA_HOME="/lib/jvm/java-11-openjdk-amd64/bin/java"
$ source /etc/environment 
$ echo $JAVA_HOME
#Install Jenkins with weekly release of below page
Refer---https://www.jenkins.io/doc/book/installing/linux/
curl -fsSL https://pkg.jenkins.io/debian/jenkins.io-2023.key | sudo tee \
  /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
  https://pkg.jenkins.io/debian binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt-get update
sudo apt-get install jenkins
$ sudo systemctl enable jenkins       //Enable the Jenkins service to start at boot
$ sudo systemctl start jenkins        //Start Jenkins as a service
$ systemctl status jenkins
################################################################### Ansible Installation on Ubuntu #########################################################################
$ sudo adduser ansibleadmin
$ sudo usermod -aG sudo ansibleadmin
$ sudo init 6
$ sudo su ansibleadmin (Login as a ansibleadmin User in the Mobaxterm)
$ ssh-keygen       //public key is at /home/ansibleadmin/.ssh/id_rsa.pub
$ sudo apt-add-repository ppa:ansible/ansible
$ sudo apt update
$ sudo apt install ansible-core
$ ansible --version
Go to Jenkins and install plugins (Publish over ssh)
Under the Publish over ssh (Add Ansible and Password Auth and test)
$ cd /opt
$ sudo mkdir docker
$ sudo chown ansibleadmin:ansibleadmin docker
$ sudo apt install docker.io
$ systemctl status docker
$ sudo usermod -aG docker ansibleadmin
$ id ansibleadmin
init 6
################################################### Create Ansible Playbook to Create Docker Image and Copy Image to DockerHub ###################################################
$ sudo apt install net-tools
$ifconfig
$ sudo nano /etc/ansible/host
  Check the Private ip of the AnsibleServer 
  sudo vi hosts (add the [ansible 10.0.0.4] :wq
$ ssh-copy-id 10.0.0.4    //adding self ssh key
cd /opt/docker
Docker images
Docker login (username/password)
=========================================================
$ nano cafe-app.yml
---
- hosts: ansible

  tasks:
  - name: clone repository
    git:
      repo: https://github.com/awscloudvendor1/Cafe-App.git
      dest: /opt/docker/cafe-app
      clone: yes
      update: yes
  - name: create docker image
    command: docker build -t cafe-app:latest /opt/docker/cafe-app
    args:
     chdir: /opt/docker/
=================================================================================
ansible-playbook cafe-app.yml --check
ansible-playbook cafe-app.yml)
============================================================================

  - name: create tag to push image onto dockerhub
    command: docker tag cafe-app:latest awscloudvendor/cafe-app:latest

  - name: push docker image
    command: docker push awscloudvendor/cafe-app:latest
==========================================================================

open the vi cafe-app-yml (Add the Below Line and Run)
ansible-playbook cafe-app.yml --check
ansible-playbook cafe-app.yml 
(Check the ansible push to docker hub)
=======================================================================================
After this Go to Jenkins 
create a Project --> add the Git Project repo ---> Branch ---> Add post-build action ---> send build artifacts over ssh
----> ansible-playbook /opt/docker/cafe-app.yml --> apply and save ---> Build Now
Go to Ansible server check (docker images)
check the docker hub and refresh and check the its updated

################################################### Install Azure CLI and Connect to Kubernetes from Azure CLI #######################################
Create a VM for the Kubernetes Server
sudo su 
$ curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
$ az --version
 Create a Kubernets Cluster and select node 2 and network configuration select (kubelet)
$ az login
$ az aks install-cli
$ az aks get-credentials --resource-group MyLab-RG --name mylab-cluster
$ kubectl get nodes
################################################### Create Deployment and Service Manisfest Files ###################################################
(Go to Root User Path And Execute The Manisfest File Than only ansible will Find the Manisfest File)
$ nano cafe-app-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mylab-cafe-app
  labels:
     app: cafe-app

spec:
  replicas: 2
  selector:
    matchLabels:
      app: cafe-app

  template:
    metadata:
      labels:
        app: cafe-app
    spec:
      containers:
      - name: cafe-app
        image: awscloudvendor/cafe-app
        imagePullPolicy: Always
        ports:
        - containerPort: 80
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

$ nano cafe-app-service.yml
apiVersion: v1
kind: Service
metadata:
  name: mylab-service
  labels:
    app: cafe-app
spec:
  selector:
    app: cafe-app 

  ports:
    - port: 80
      targetPort: 80

  type: LoadBalancer

Check the Private ip of the Kubernetes Server and Go to ansible server (/etc/ansible)
open the hosts file vi hosts ---> and add [Kubernetes 10.0.0.6] ---> :wq
Go to the Kubenetes server and access the /etc/ssh/sshd_config ---> PasswordAuthentication Yes 
                                                                    PermitRootLogin yes 
passwd root
123
123
service sshd restart

Go to the Ansible Server --> ssh-copy-id root@10.0.0.6 ---> Private ip of the Kubernetes Server


############################### Integrate Kube-Server with Ansible and Create Ansible Playbook for Deployment & Service Manifest files ###############################
Go to Ansible Server
cd /opt/docker
$  mv cafe-app.yml create-image-cafe-app.yml 
$ nano kubernetes-deploy.yml
---
- hosts: kubernetes
  user: root

  tasks:
    - name: deploy cafeapp on kubernetes
      command: kubectl apply -f cafe-app-deployment.yml

    - name: create service for cafeapp
      command: kubectl apply -f cafe-app-service.yml

    - name: update deployment with new pods if image updated in docker hub
      command: kubectl rollout restart deployment.apps/mylab-cafe-app

Go to Kube Server ---> kubectl get all


$ ansible-playbook kubernetes-deploy.yml ---> Run in the ansible Server

Go to the Kubenernets Server ---> kubectl get all ----> we can see all pods running with the LoadBalancer

Go to the Jenkins Server
Create a new project ----> CD Job
Postbuildactions ---------> send build artifacts over ssh
Exec command:ansible-playbook /opt/docker/kubernetes-deploy.yml

Go to jenkind CI-Job Project
change Exec command:ansible-playbook /opt/docker/create-image-cafe-app.yml ---> Replace the Name

Select the Postbuildactions --------> Build other Projects ---> select the CD Job ---> pollSCM (* * * * *) --> apply save

Check the Pipeline


############################################################## Cleanup ##############################################################
$ kubectl delete deployment.apps/mylab-cafe-app
$ kubectl delete service/mylab-service
$ az aks delete --name mylab-cluster --resource-group MyLab-RG
